def main():
    visited1=set()
    visited2=set()
    queue=[]
    n=int(input("enter no on nodes"))
    graph=dict()
    for i in range(1,n+1) :
        edges=int(input("enter no of edges for node{}".format(i)))
        graph[i] = list()
        
        for j in range(1,edges+1):
            node=int(input("enter edge {} for node {}".format(j,i)))
            graph[i].append(node)
    print("dfs")
    dfs(visited1,1,graph)
    print("bfs")
    bfs(visited2,1,graph,queue)

def dfs(visited,node,graph):

    if node not in visited:
        print(node)
        visited.add(node)
        for i in graph[node]:
            dfs(visited,i,graph)
            

def bfs(visited,node,graph,queue):

    visited.add(node)
    queue.append(node)
    while queue:
        s=queue.pop(0)
        print(s)
        for i in graph[s]: 
            if i not in visited:
                visited.add(i)
                queue.append(i)
            
        
main()